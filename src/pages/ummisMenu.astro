---
import ProductCard from '~/components/widgets/ProductCard.astro';
import Layout from '~/layouts/PageLayout.astro';
import HeroText from '~/components/widgets/HeroText.astro';
// import { useState, useEffect } from "react";

type Additive = {
  additiveName: string;
  additivePrice: number;
};

interface Tag {
  name: string;
  color: string;
}

interface Item {
  item_name: string;
  item_description: string;
  item_price: number;
  tags: Tag[];
  item_image_url: string;
  additives: Additive[];
}

interface Category {
  categoryName: string;
  categoryDescription: string;
  categorySubtext: string;
  items: Item[];
}

const metadata = {
  title: "Ummi's Menu",
  ignoreTitleTemplate: true,
};

const gqlQUERY = `
query GetMenuItems{
menuItems (pagination: {limit: 100}){
  data {
      id
      attributes {
        itemName
        itemDescription
        itemPrice
        item_category {
          data {
            id
            attributes {
              categoryName
              categoryDescription
              categorySubtext
            }
          }
        }
        item_image {
          data {
            id
            attributes {
              url
            }
          }
        }
        item_tags {
          data {
            id
            attributes {
              tagName
              tagColorHEX
            }
          }
        }
        item_additives{
          data{
            id
            attributes{
              ItemAdditiveName
              ItemAdditivePrice
            }
          }
        }
      }
    }
  }
}
`;

const fetchMenuItems = async () => {
  const response = await fetch('https://ommi-strapi-base.onrender.com/graphql', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      query: gqlQUERY,
    }),
  });
  const result = await response.json();

  // Map menu items by categories
  const categorizedMenuItems = result.data.menuItems.data.reduce((categories: Record<string, Category>, menuItem) => {
    const categoryName = menuItem.attributes.item_category?.data?.attributes?.categoryName || 'Uncategorized';

    if (!categories[categoryName]) {
      categories[categoryName] = {
        categoryName,
        categoryDescription: menuItem.attributes.item_category?.data?.attributes?.categoryDescription || '',
        categorySubtext: menuItem.attributes.item_category?.data?.attributes?.categorySubtext || '',
        items: [],
      };
    }

    const additives: Additive[] = menuItem.attributes.item_additives?.data.map((additive) => ({
      additiveName: additive.attributes.ItemAdditiveName,
      additivePrice: additive.attributes.ItemAdditivePrice,
    })) || [];

    categories[categoryName].items.push({
      item_name: menuItem.attributes.itemName,
      item_description: menuItem.attributes.itemDescription,
      item_price: menuItem.attributes.itemPrice,
      tags: menuItem.attributes.item_tags?.data.map((tag) => ({
        name: tag.attributes.tagName,
        color: tag.attributes.tagColorHEX,
      })) || [],
      item_image_url: menuItem.attributes.item_image?.data?.attributes?.url || '',
      additives,
    });

    return categories;
  }, {} as Record<string, Category>);

  return Object.values(categorizedMenuItems);
};

const categorizedMenuItems = await fetchMenuItems();


// test data
// const categorizedMenuItems: Category[] = [
//   {
//     categoryName: "Brunch",
//     categoryDescription: "Delicious brunch items to start your day",
//     categorySubtext: "Available from 9 AM - 2 PM",
//     items: [
//       {
//         item_name: "Avocado Toast",
//         item_description: "Smashed avocado on toasted sourdough bread",
//         item_price: 8.00,
//         tags: [
//           { name: "Vegan", color: "#8BC34A" },
//           { name: "Gluten Free", color: "#FFEB3B" }
//         ],
//         item_image_url: "/images/avocado-toast.jpg",
//         additives: [
//           { additiveName: "Extra Avocado", additivePrice: 2.00 },
//           { additiveName: "Poached Egg", additivePrice: 1.50 }
//         ]
//       },
//       {
//         item_name: "Pancakes",
//         item_description: "Fluffy pancakes with syrup and butter",
//         item_price: 7.50,
//         tags: [
//           { name: "Vegetarian", color: "#FFC107" }
//         ],
//         item_image_url: "/images/pancakes.jpg",
//         additives: [
//           { additiveName: "Extra Syrup", additivePrice: 1.00 },
//           { additiveName: "Fruit Toppings", additivePrice: 2.00 }
//         ]
//       }
//     ]
//   },
//   {
//     categoryName: "Lunch",
//     categoryDescription: "Hearty meals to keep you going",
//     categorySubtext: "Available from 12 PM - 5 PM",
//     items: [
//       {
//         item_name: "Grilled Chicken Sandwich",
//         item_description: "Grilled chicken breast with lettuce and tomato on a bun",
//         item_price: 10.00,
//         tags: [
//           { name: "High Protein", color: "#2196F3" }
//         ],
//         item_image_url: "/images/grilled-chicken-sandwich.jpg",
//         additives: [
//           { additiveName: "Extra Chicken", additivePrice: 3.00 },
//           { additiveName: "Bacon", additivePrice: 2.00 }
//         ]
//       },
//       {
//         item_name: "Caesar Salad",
//         item_description: "Crisp romaine with Caesar dressing and croutons",
//         item_price: 9.00,
//         tags: [
//           { name: "Vegetarian", color: "#FFC107" },
//           { name: "Gluten Free", color: "#FFEB3B" }
//         ],
//         item_image_url: "/images/caesar-salad.jpg",
//         additives: [
//           { additiveName: "Grilled Chicken", additivePrice: 3.00 },
//           { additiveName: "Shrimp", additivePrice: 4.00 }
//         ]
//       }
//     ]
//   }
// ];
---

<>
  <Layout metadata={metadata}>
    <HeroText id="menuTitle">
      <Fragment class="menuTitle" slot="title">Ummi's Brunch Menu</Fragment>
    </HeroText>
    <div class="menu">
      {categorizedMenuItems?.map((category: Category) => (
        <div class="category" class:category-name={category.categoryName}>
          <h1>{category.categoryName}</h1>
          <h2>{category.categorySubtext}</h2>
          <p>{category.categoryDescription}</p>
          <div class="menu-grid">
            {category.items.map(item => (
              <ProductCard
                title={item.item_name}
                description={item.item_description}
                price={item.item_price}
                tags={item.tags.map(tag => ({
                  ...tag,
                  class: `tag-${tag.name.replace(/\s+/g, '-').toLowerCase()}`
                }))}
                image={item.item_image_url}
                additives={item.additives}
              />
            ))}
          </div>
        </div>
      ))}
    </div>
    <div class="notice-container">
      <div class="notice-title">ALLERGY NOTICE:</div>
      <div class="notice-text">
        Our food may contain or come into contact with wheat, milk, eggs, peanuts, tree nuts, soybean, sesame & dairy
        products. Please inform your server if you have any type of allergy.
      </div>
    </div>
  </Layout>
</>

<style>
  .menu {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
  }

  .menu-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr); /* Two equal columns */
    gap: 1.2rem;
    max-width: 1200px; /* Maximum width for the grid layout */
    /* width: 100%; */
    /* padding-top: 2rem; */
  }

  .item-card {
    text-align: left !important; /* Left-aligns text within each item */

  }

  .item-card h3 {
    margin-bottom: 0.5rem;
    color: #2e518b;
  }

  .item-card p {
    margin: 0.5rem 0;
    color: #444;
  }

  .item-card .price {
    font-weight: bold;
    color: #000;
  }

  .item-card .tag {
    display: block;
    margin-top: 0.5rem;
    font-size: 0.9rem;
  }

  .menu h1,
  .menu h2,
  .menu p {
    text-align: center; /* Center title, subtitle, and description */
    margin: 0.5rem 0;
  }

  .menu h1 {
    font-size: 2rem;
    color: #2e518b;
  }

  .menu h2 {
    font-style: italic;
    font-size: 1.25rem;
    color: #666;
  }

  .menu p {
    color: #444;
    padding-bottom: 1.5rem;
  }

  .notice-container {
    border-top: 1px solid #b0b0b0;
    border-bottom: 1px solid #b0b0b0;
    padding: 16px 0;
    text-align: center;
    font-family: Arial, sans-serif;
    color: #333333;
  }

  .notice-title {
    font-weight: bold;
    font-size: 18px;
    color: #0a3e6e;
    margin-bottom: 8px;
  }

  .notice-text {
    font-size: 14px;
  }

  .menuTitle {
    color: #0a3e6e;
  }
</style>
