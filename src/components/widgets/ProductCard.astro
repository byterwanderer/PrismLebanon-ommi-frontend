---
type Tag = {
  name: string;
  color: string;
  class: string;
};

type Additive = {
  additiveName: string;
  additivePrice: number; // Add price to additives
};

export interface Props {
  title: string;
  description: string;
  price: number;
  tags?: Tag[];
  image?: string; // Ensure this matches your data type
  additives?: Additive[];
}

const { title, description, price, tags = [], image, additives = [] } = Astro.props;
const numericPrice = price; // Ensure price is a number
---
<div class="product-card">
  {image && (
    <div class="product-image">
      <img src={image} alt={title} />
    </div>
  )}
  <div class="product-content">
    <h3 class="item-title">{title}</h3>
    <p class="item-description">{description}</p>
    <span class="item_price">${numericPrice.toFixed(2)}</span>
    <div class="tags">
      {Array.isArray(tags) ? (
        tags.map((tag, index) => (
          <span
            class={`tag ${tag.class}`}
            style={{ color: tag.color }}
          >
            {tag.name}
            {index < tags.length - 1 && <span class="separator"> | </span>}
          </span>
        ))
      ) : (
        <span class="tag">{tags}</span>
      )}
    </div>
    {additives.length > 0 && (
      <div class="item-additives">
        <h4>Additives:</h4>
        <ul>
          {additives.map((additive) => (
            <li>
              {additive.additiveName} - ${additive.additivePrice.toFixed(2)}
            </li>
          ))}
        </ul>
      </div>
    )}
  </div>
</div>

<style>
.product-card {
    font-family: sans-serif;
    display: flex;
    flex-direction: column;
  }

  .product-image {
    height: 150px;
    width: auto;
    padding-top: 1.5rem;
  }
  .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    border-radius: 20px;
  }

  .item-title {
    text-transform: capitalize;
    font-weight: bolder;
    color: #2e518b;
  }

  .item-description {
    font-style: italic;
    color: #444;
  }

  .item-price {
    font-weight: bolder;
    color: #333;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
  }

  .tag {
    display: inline-block;
    border-radius: 3px;
    font-size: 0.9rem;
    font-weight: bold;
    margin: 0.05rem;
  }

  .separator {
    color: #999;
    margin: 0 0.05rem;
  }

  .item-additives {
    margin-top: 1rem;
  }

  .item-additives h4 {
    font-size: 1.1rem;
    font-weight: bold;
    color: #555;
  }

  .item-additives ul {
    list-style-type: disc;
    margin: 0.5rem 0;
    padding-left: 1.5rem;
  }

  .item-additives li {
    font-size: 0.9rem;
    color: #666;
  }

  @media (min-width: 768px) {
    .product-card {
      flex-direction: row;
    }

    .product-image {
      flex: 0 0 150px;
      height: 150px;
    }

    .product-content {
      padding: 1rem 1.5rem;
      flex: 1;
    }
  }

  @media (min-width: 1200px) {
    .product-card {
      max-width: 800px;
      margin-right: auto;
    }
  }
</style>
