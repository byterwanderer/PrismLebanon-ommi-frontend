---

type Tag = {
  name: string;
  color: string;
  class: string;
};

export interface Props {
  title: string;
  description: string;
  price: string;
  tags?: Tag[];
  image?: string | unknown;
}

const { title, description, price, tags }: Props = Astro.props;
---

<div class="product-card">
  <h3 class="item-title">{title}</h3>
  <p class="item-description">{description}</p>
  <p class="item-price">{price}</p>
  {tags && (
    <div class="tags">
      {Array.isArray(tags) ? (
        tags.map((tag, index) => (
          <span
            class={`tag ${tag.class}`}
            style={{ color: tag.color }}
          >
            {tag.name}
            {index < tags.length - 1 && <span class="separator"> | </span>}
          </span>
        ))
      ) : (
        <span class="tag">{tags}</span>
      )}
    </div>
  )}
</div>

<style>
.product-card {
  font-family: sans-serif;
  margin-bottom: 2rem;
}

.item-title {
  text-transform: capitalize;
  font-weight: bolder;
  color: #2e518b;
}

.item-description {
  font-style: italic;
  color: #444;
}

.item-price {
  font-weight: bolder;
  color: #333;
}
.tags {
  display: flex;
  flex-wrap: wrap;
  /* justify-content: center; */
}

.tag {
  display: inline-block;
  border-radius: 3px;
  font-size: 0.9rem;
  font-weight: bold;
  margin: 0.05rem;
}

.separator {
  color: #999;
  margin: 0 0.05rem; /* Space around the pipe character */
}
</style>
